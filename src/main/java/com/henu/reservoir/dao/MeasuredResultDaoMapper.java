package com.henu.reservoir.dao;

import com.henu.reservoir.domain.MeasuredResultDao;
import org.apache.ibatis.annotations.Mapper;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
@Mapper
public interface MeasuredResultDaoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table measured_result
     *
     * @mbg.generated Tue Dec 31 10:42:04 CST 2019
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table measured_result
     *
     * @mbg.generated Tue Dec 31 10:42:04 CST 2019
     */
    int insert(MeasuredResultDao record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table measured_result
     *
     * @mbg.generated Tue Dec 31 10:42:04 CST 2019
     */
    int insertSelective(MeasuredResultDao record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table measured_result
     *
     * @mbg.generated Tue Dec 31 10:42:04 CST 2019
     */
    MeasuredResultDao selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table measured_result
     *
     * @mbg.generated Tue Dec 31 10:42:04 CST 2019
     */
    int updateByPrimaryKeySelective(MeasuredResultDao record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table measured_result
     *
     * @mbg.generated Tue Dec 31 10:42:04 CST 2019
     */
    int updateByPrimaryKey(MeasuredResultDao record);


    //通过水库id查找MeasuredResult
    List<MeasuredResultDao> selectByReservoirId(Integer reservoir_id);

    //选出今年的实测水位数据
    List<MeasuredResultDao> selectCurrentYear();

    List<MeasuredResultDao> selectAll();

    //使用reservoir_id和date获取1
    MeasuredResultDao selectByReservoirIdAndDate(MeasuredResultDao record);

    //使用reservoir_id和date更新1
    int updateByReservoirIdAndDate(MeasuredResultDao record);
}